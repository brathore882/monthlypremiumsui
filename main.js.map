{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/base-service.service.ts","./src/app/config.service.ts","./src/app/premium.service.ts","./src/app/round.pipe.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { CalculatePremium } from './Premium.model';\r\nimport { PremiumService } from './premium.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  public birthdate: any;\r\n  public age: number | undefined;\r\n  public deathPremium: any;\r\n  isSubmitted = false;\r\n  submitted = false;\r\n\r\n  Occupations = {'Cleaner':'Light Manual', 'Doctor':'Professional', 'Author':'White Collar', 'Farmer':'Heavy Manual'\r\n  , 'Mechanic':'Heavy Manual', 'Florist':'Light Manual' }\r\n  showAge: any ;\r\n \r\n  constructor(public fb: FormBuilder,private httpPremiumService:PremiumService,private http: HttpClient) {}\r\n  registrationForm = this.fb.group({\r\n    OccupationType: ['', [Validators.required]],    \r\n    SumInsured: ['', [Validators.required]],   \r\n    DateofBirth: ['', [Validators.required]],\r\n    Name: ['', [Validators.required]],\r\n  });\r\n  \r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.registrationForm.controls;\r\n  }\r\n  changeOccupation(e: any) {\r\n    this.submitted = true;\r\n    if (this.registrationForm.invalid) \r\n    {\r\n      return;\r\n    }else{\r\n       \r\n        \r\n    this.calculateAge();\r\n\r\n    this.postPremium(e);}\r\n  \r\n  }\r\n   calculateAge() {\r\n    \r\n    if (this.age) {\r\n      const convertAge = new Date(this.age);\r\n      const timeDiff = Math.abs(Date.now() - convertAge.getTime());\r\n      this.showAge = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\r\n    }\r\n  }\r\n  private postPremium(e: any) {\r\n    let params = new HttpParams();\r\n    params = params.append('Age', this.showAge);\r\n    params = params.append('SumInsured', this.registrationForm.get('SumInsured')?.value);\r\n    params = params.append('OccupatioRating', e.target.value);\r\n    this.loadAppConfigData().subscribe(url=>{\r\n      \r\n      this.httpPremiumService.getDeathPremium(params,url.apiUrl).subscribe(\r\n        data =>{ \r\n          this.deathPremium=data;\r\n        }\r\n        ); \r\n    })\r\n    \r\n  }\r\n  public loadAppConfigData():Observable<any> { \r\n    return this.http.get('../assets/config.json');   \r\n    }\r\n\r\n  // Access formcontrols getter\r\n  get OccupationType() {\r\n    return this.registrationForm.get('OccupationType');\r\n  }\r\n  \r\n}","\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row custom-wrapper\">\r\n       <form [formGroup]=\"registrationForm\" >\r\n        <div>\r\n          <div class=\"mb-3 row\">\r\n            <div class=\"col-sm-2\">\r\n             </div>\r\n            <div class=\"col-sm-4\">\r\n            </div>\r\n          </div>\r\n          <div class=\"input-group mb-3 row\">\r\n          <div class=\"col-sm-2\">\r\n            <span class=\"input-group-text\">Name</span>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n            <input type=\"text\" formControlName=\"Name\" aria-label=\"Name\" \r\n            [ngClass]=\"{ 'is-invalid': submitted && f['Name'].errors }\" class=\"form-control\">\r\n            <div *ngIf=\"submitted && f['Name'].errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f['Name'].errors\">Name is required</div>\r\n            </div>\r\n          </div> \r\n        </div>\r\n      \r\n        <div class=\"input-group mb-3 row\">\r\n          <div class=\"col-sm-2\">\r\n            <span class=\"input-group-text\">Date of Birth</span>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n            <input type=\"date\"  [ngClass]=\"{ 'is-invalid': submitted && f['DateofBirth'].errors }\"\r\n             [(ngModel)]=\"age\" (change)=\"calculateAge()\"   formControlName=\"DateofBirth\" \r\n             aria-label=\"Date of Birth\" class=\"form-control\">\r\n             <div *ngIf=\"submitted && f['Name'].errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f['Name'].errors\">Date is required</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"input-group mb-3 row\">\r\n          <div class=\"col-sm-2\">\r\n            <span class=\"input-group-text\">Age</span>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n           {{showAge}}\r\n            <!-- <input  type=\"number\"  formControlName=\"Age\" aria-label=\"Age\" class=\"form-control\"> -->\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"input-group mb-3 row\">\r\n          <div class=\"col-sm-2\">\r\n            <span class=\"input-group-text\">Death – Sum Insured</span>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n            <input type=\"number\" formControlName=\"SumInsured\" aria-label=\"Death – Sum Insured\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f['SumInsured'].errors }\" class=\"form-control\">\r\n            <div *ngIf=\"submitted && f['Name'].errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f['Name'].errors\">Death – Sum Insured is required</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"input-group mb-3 row\">\r\n          <div class=\"col-sm-2\">\r\n            <span class=\"input-group-text\">Occupation</span>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n             \r\n          <select\r\n          class=\"form-select\"\r\n          (change)=\"changeOccupation($event)\"\r\n          formControlName=\"OccupationType\"  >\r\n          <option value=\"\" selected>Choose Occupation</option> \r\n          <option *ngFor=\"let item of Occupations | keyvalue\" [value]=\"item.value\" >{{item.key}}</option>\r\n          \r\n        </select>\r\n           \r\n          </div>\r\n        </div>\r\n         \r\n        <div class=\"input-group mb-3 row\">\r\n          <div class=\"col-sm-2\">\r\n            <span class=\"input-group-text\">Death Premium </span>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n            {{deathPremium | number: '1.0-0'}}          \r\n          </div>\r\n        </div>\r\n        </div> \r\n        \r\n      </form>\r\n    </div>\r\n  </div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { ConfigService } from './config.service';\nimport { RoundPipe } from './round.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RoundPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n   \n    ConfigService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (configService: ConfigService) => () => configService.loadAppConfig(),\n      deps: [ConfigService],\n      multi: true,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient, HttpEvent, HttpHeaders, HttpParams} from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\nimport config from '../assets/config.json';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService {\r\n\r\n  constructor(protected httpClient:HttpClient) { }\r\n\r\n  getDeathPremium(params:HttpParams,url:string)\r\n  {\r\n    \r\n  const headerOptions = new HttpHeaders();  \r\n     headerOptions.set('Content-Type', 'application/json');\r\n     return this.httpClient.get(url+'api/Premium/GetPremium', { params: params ,\r\n    headers: headerOptions});\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable, take } from 'rxjs';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  \npublic get appConfig(): any {\n  return this._appConfig;\n}\n\npublic set appConfig(value: any) {\n  this._appConfig = value;\n}\n\nprivate _appConfig: any;\n  baseUrl!: string;\n\n  constructor( private _httpClient: HttpClient) {\n    console.log('constructor app-config-service'); \n    this.loadAppConfig();\n}\n\npublic loadAppConfig(): Promise<any> { \n  return firstValueFrom(this._httpClient.get('../assets/config.json'))\n  .then(result => {    \n   this.appConfig = result;\n   return Promise.resolve(result);});\n  }\n\n\n  public loadAppConfigData():Observable<any> { \n    return this._httpClient.get('../assets/config.json');   \n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpEvent, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport { BaseService } from './base-service.service';\nimport { CalculatePremium } from './Premium.model';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PremiumService extends BaseService{\n\n  constructor(protected override httpClient:HttpClient)  {super(httpClient); }\n  \n  getPremium(params:HttpParams):Observable<any> {\n    \n    return this.getDeathPremium(params,\"\")\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'round'\n})\n@Pipe({name: 'round'})\nexport class RoundPipe {\n  transform (input:number) {\n    return Math.floor(input);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = \n{\n    production: false,\n    API_URL: 'http://localhost/',\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}